PARSER_BEGIN(Karloff)
import java.io.*;
public class Karloff {

  public static void main(String args[]) throws ParseException,IOException {
    
 Karloff analisador = new Karloff(new FileInputStream(args[0]));
 analisador.Karloff();
  }

}

PARSER_END(Karloff)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <APARENTESES: "(">
| <FPARENTESES: ")">
| <PONTOVIRG: ";">
| <IGUAL: "=">

| <AND: "&&">
| <OR: "||"> 
| <NOT: "!">

| <ANDBIT: "&">
| <ORBIT: "|">
| <XORBIT: "^">
| <COMPLEMENTO1: "~">
| <DESLOCESQ: "<<">
| <DESLOCDIR: ">>">

| <SOMA: "+">
| <SUB: "-">
| <MULT: "*">
| <DIV: "/">
| <MOD: "%">

| <ATTRADD: "+=">
| <ATTRSUB: "-=">
| <ATTRMULT: "*=">
| <ATTRDIV: "/=">
| <ATTRMOD: "%=">
| <ATTRDESESQ: "<<=">
| <ATTRDESDIR: ">>=">
| <ATTRANDBIN: "&=">
| <ATTRORBIN: "|=">
| <ATTRXORBIN: "^=">


}

TOKEN :
{
  <NUM : (["0"-"9"])+ (".")* (["0"-"9"])+>
 |< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])* >
 

}



void Karloff () :
{Token t;}
{

(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| <APARENTESES> { System.out.println("Abre parenteses: (");}
| <FPARENTESES> { System.out.println("Fecha parenteses: )");}
| <PONTOVIRG> { System.out.println("Ponto e virgula: ;");}
| <IGUAL> { System.out.println("igual: =");}
| t=<NUM> { System.out.println("NÃºmero: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
)*
<EOF> 


}





